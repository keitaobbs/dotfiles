.PHONY: defconfig-linux build-linux clean-linux \
		build-lkm clean-lkm \
		defconfig-busybox build-busybox clean-busybox build-initramfs

ARCH = arm64

ifeq ($(ARCH),arm64)
CROSS_COMPILE = aarch64-linux-gnu-
TARGET_IMAGE = Image
else ifeq ($(ARCH),x86_64)
CROSS_COMPILE = x86_64-linux-gnu-
TARGET_IMAGE = bzImage
else
$(error Unsupported architecture '$(ARCH)' is specified)
endif

defconfig-linux:
	@cd linux; \
		ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) make defconfig

build-linux:
	@cd linux; \
		ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) make $(TARGET_IMAGE) modules
	@cp linux/arch/$(ARCH)/boot/$(TARGET_IMAGE) .

clean-linux:
	@cd linux; \
		make clean && \
		make mrproper

build-lkm:
	@cd lkm_sample; \
		ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) make

clean-lkm:
	@cd lkm_sample; \
		make clean

defconfig-busybox:
	@cd busybox; \
		ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) make defconfig && \
		sed -i "s/^.*CONFIG_STATIC[= ].*$$/CONFIG_STATIC=y/g" .config && \
		sed -i "s/^.*CONFIG_STATIC_LIBGCC[= ].*$$/CONFIG_STATIC_LIBGCC=y/g" .config && \
		sed -i "s/^.*CONFIG_TC[= ].*$$/CONFIG_TC=n/g" .config

build-busybox:
	@cd busybox; \
		ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) make install

clean-busybox:
	@cd busybox; \
		make clean && \
		make mrproper

build-initramfs:
	@cp init busybox/_install
	@cp lkm_sample/lkm_sample.ko busybox/_install
	@cd busybox/_install; \
		mkdir -p dev home mnt proc sys tmp var && \
		chmod +x init && \
		find . | cpio -o -H newc | gzip > ../rootfs.img
	@cp busybox/rootfs.img .
